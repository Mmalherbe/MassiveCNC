[segment [list* "SVGtoGCODE.frmExport" [segment [&vb-interface-prop (>>all) [segment] "Label1" [&type-dot [&id "VB"] [&id "Label"]]] [&vb-interface-prop (>>all) [segment] "txtPath" [&type-dot [&id "VB"] [&id "TextBox"]]] [&vb-interface-prop (>>all) [segment] "cmdChoosePath" [&type-dot [&id "VB"] [&id "CommandButton"]]] [&vb-interface-prop (>>all) [segment] "Label2" [&type-dot [&id "VB"] [&id "Label"]]] [&vb-interface-prop (>>all) [segment] "Label3" [&type-dot [&id "VB"] [&id "Label"]]] [&vb-interface-prop (>>all) [segment] "Label4" [&type-dot [&id "VB"] [&id "Label"]]] [&vb-interface-prop (>>all) [segment] "chkZPlunge" [&type-dot [&id "VB"] [&id "CheckBox"]]] [&vb-interface-prop (>>all) [segment] "txtFeedRate" [&type-dot [&id "VB"] [&id "TextBox"]]] [&vb-interface-prop (>>all) [segment] "chkPPI" [&type-dot [&id "VB"] [&id "CheckBox"]]] [&vb-interface-prop (>>all) [segment] "txtPPI" [&type-dot [&id "VB"] [&id "TextBox"]]] [&vb-interface-prop (>>all) [segment] "Frame1" [&type-dot [&id "~virtual"] [&id "@FrameX1"]]] [&vb-interface-prop (>>all) [segment] "Label5" [&type-dot [&id "VB"] [&id "Label"]]] [&vb-interface-prop (>>all) [segment] "Label6" [&type-dot [&id "VB"] [&id "Label"]]] [&vb-interface-prop (>>all) [segment] "Label7" [&type-dot [&id "VB"] [&id "Label"]]] [&vb-interface-prop (>>all) [segment] "Label8" [&type-dot [&id "VB"] [&id "Label"]]] [&vb-interface-prop (>>all) [segment] "chkLoop" [&type-dot [&id "VB"] [&id "CheckBox"]]] [&vb-interface-prop (>>all) [segment] "txtLoops" [&type-dot [&id "VB"] [&id "TextBox"]]] [&vb-interface-prop (>>all) [segment] "txtMM" [&type-dot [&id "VB"] [&id "TextBox"]]] [&vb-interface-prop (>>all) [segment] "Frame2" [&type-dot [&id "~virtual"] [&id "@FrameX1"]]] [&vb-interface-prop (>>all) [segment] "cmdExport" [&type-dot [&id "VB"] [&id "CommandButton"]]]]] [list* "SVGtoGCODE.frmTile" [segment [&vb-interface-prop (>>all) [segment] "txtInput" [&type "@ControlArray" [&type-dot [&id "VB"] [&id "TextBox"]]]] [&vb-interface-prop (>>all) [segment] "Label1" [&type-dot [&id "VB"] [&id "Label"]]] [&vb-interface-prop (>>all) [segment] "Label2" [&type-dot [&id "VB"] [&id "Label"]]] [&vb-interface-prop (>>all) [segment] "Label3" [&type-dot [&id "VB"] [&id "Label"]]] [&vb-interface-prop (>>all) [segment] "Label4" [&type-dot [&id "VB"] [&id "Label"]]] [&vb-interface-prop (>>all) [segment] "Label5" [&type-dot [&id "VB"] [&id "Label"]]] [&vb-interface-prop (>>all) [segment] "Label6" [&type-dot [&id "VB"] [&id "Label"]]] [&vb-interface-prop (>>all) [segment] "_txtInput_1" [&type-dot [&id "VB"] [&id "TextBox"]]] [&vb-interface-prop (>>all) [segment] "_txtInput_2" [&type-dot [&id "VB"] [&id "TextBox"]]] [&vb-interface-prop (>>all) [segment] "_txtInput_3" [&type-dot [&id "VB"] [&id "TextBox"]]] [&vb-interface-prop (>>all) [segment] "_txtInput_4" [&type-dot [&id "VB"] [&id "TextBox"]]] [&vb-interface-prop (>>all) [segment] "_txtInput_5" [&type-dot [&id "VB"] [&id "TextBox"]]] [&vb-interface-prop (>>all) [segment] "_txtInput_0" [&type-dot [&id "VB"] [&id "TextBox"]]] [&vb-interface-prop (>>all) [segment] "cmdGo" [&type-dot [&id "VB"] [&id "CommandButton"]]]]] [list* "SVGtoGCODE.mcPopupMenu" [segment [&interface-sub-decl [segment] [&long] "Show" (&arg-list [&arg (&optional) (&byval) [&long] "iFormHwnd" [&neg 1]] [&arg (&optional) (&byval) [&long] "x" [&neg 1]] [&arg (&optional) (&byval) [&long] "y" [&neg 1]] [&arg (&optional) (&byval) [&long] "iControlHwnd" [&neg 1]]) #f] [&interface-sub-decl [segment] [&void] "Add" (&arg-list [&arg (&byval) [&long] "iMenuID"] [&arg [&variant] "vMenuItem"] [&arg (&optional) [&boolean] "bDefault" #f] [&arg (&optional) [&boolean] "bChecked" #f] [&arg (&optional) [&type "mceItemStates"] "eItemState"] [&arg (&optional) (&byval) [&long] "imgUnchecked" 0] [&arg (&optional) (&byval) [&long] "imgChecked" 0]) #f] [&interface-sub-decl [segment] [&void] "Remove" (&arg-list [&arg (&byval) [&long] "iMenuPosition"]) #f] [&vb-interface-prop (>>get) [segment] "Hwnd" [&long]] [&vb-interface-prop (>>all) [segment] "Caption" [&string]]]] [list* "SVGtoGCODE.ColorCode" [segment [&interface-sub-decl [segment] [&type "typCMYK"] "HextoCMYK" (&arg-list [&arg [&string] "inHex"]) #f] [&interface-sub-decl [segment] [&string] "CMYKtoHex" (&arg-list [&arg [&type "typCMYK"] "inCMYK"]) #f] [&interface-sub-decl [segment] [&type "ColorConstants"] "textColorBasedOnBackground" (&arg-list [&arg [&long] "inC"]) #f] [&interface-sub-decl [segment] [&type "typRGB"] "CMYKtoRGB" (&arg-list [&arg [&type "typCMYK"] "inCMYK"]) #f] [&interface-sub-decl [segment] [&type "typCMYK"] "RGBtoCMYK" (&arg-list [&arg [&type "typRGB"] "inRGB"]) #f] [&interface-sub-decl [segment] [&variant] "loadPantone" (&arg-list [&arg [&string] "inFile"]) #f] [&interface-sub-decl [segment] [&type "typLAB"] "XYZtoLAB" (&arg-list [&arg [&type "typXYZ"] "inXYZ"]) #f] [&interface-sub-decl [segment] [&type "typXYZ"] "RGBtoXYZ" (&arg-list [&arg [&type "typRGB"] "inRGB"]) #f] [&interface-sub-decl [segment] [&type-dot [&id "stdole"] [&id "OLE_COLOR"]] "convertRGBToVB" (&arg-list [&arg [&type "typRGB"] "inRGB"]) #f] [&interface-sub-decl [segment] [&type "typRGB"] "HSLtoRGB" (&arg-list [&arg [&type "typHSL"] "inHSL"]) #f] [&interface-sub-decl [segment] [&type "typHSL"] "RGBtoHSL" (&arg-list [&arg [&type "typRGB"] "inRGB"]) #f] [&interface-sub-decl [segment] [&type "typRGB"] "convertVBtoRGB" (&arg-list [&arg [&long] "c"]) #f] [&interface-sub-decl [segment] [&string] "fixZeros" (&arg-list [&arg [&string] "inSt"]) #f] [&interface-sub-decl [segment] [&string] "makeHTMLColor" (&arg-list [&arg [&long] "c"]) #f]]] [list* "SVGtoGCODE.Rasterize" [segment [&interface-sub-decl [segment] [&variant] "rasterFile" (&arg-list [&arg [&string] "inFile"]) #f]]] [list* "SVGtoGCODE.frmScale" [segment [&vb-interface-prop (>>all) [segment] "originalH" [&double]] [&vb-interface-prop (>>all) [segment] "originalW" [&double]] [&vb-interface-prop (>>all) [segment] "setH" [&double]] [&vb-interface-prop (>>all) [segment] "setW" [&double]] [&vb-interface-prop (>>all) [segment] "originalAspect" [&double]] [&vb-interface-prop (>>all) [segment] "updatingValue" [&boolean]] [&vb-interface-prop (>>all) [segment] "Label1" [&type-dot [&id "VB"] [&id "Label"]]] [&vb-interface-prop (>>all) [segment] "Label2" [&type-dot [&id "VB"] [&id "Label"]]] [&vb-interface-prop (>>all) [segment] "Label3" [&type-dot [&id "VB"] [&id "Label"]]] [&vb-interface-prop (>>all) [segment] "Label4" [&type-dot [&id "VB"] [&id "Label"]]] [&vb-interface-prop (>>all) [segment] "Label5" [&type-dot [&id "VB"] [&id "Label"]]] [&vb-interface-prop (>>all) [segment] "txtWidth" [&type-dot [&id "VB"] [&id "TextBox"]]] [&vb-interface-prop (>>all) [segment] "txtHeight" [&type-dot [&id "VB"] [&id "TextBox"]]] [&vb-interface-prop (>>all) [segment] "chkAspect" [&type-dot [&id "VB"] [&id "CheckBox"]]] [&vb-interface-prop (>>all) [segment] "cmdApply" [&type-dot [&id "VB"] [&id "CommandButton"]]] [&vb-interface-prop (>>all) [segment] "cmdCancel" [&type-dot [&id "VB"] [&id "CommandButton"]]] [&vb-interface-prop (>>all) [segment] "txtScale" [&type-dot [&id "VB"] [&id "TextBox"]]]]] [list* "SVGtoGCODE.GeneralFunctions" [segment [&interface-sub-decl [segment] [&boolean] "FromCheck" (&arg-list [&arg [&type-dot [&id "VB"] [&id "CheckBox"]] "inCheck"]) #f] [&interface-sub-decl [segment] [&variant] "HandleError" (&arg-list [&arg [&string] "ErrLine"] [&arg [&string] "ErrLocation"] [&arg [&string] "ErrNum"] [&arg [&string] "ErrDesc"]) #f] [&interface-sub-decl [segment] [&string] "addCredentialsToPath" (&arg-list [&arg [&string] "inPath"] [&arg [&string] "sUser"] [&arg [&string] "sPass"]) #f] [&interface-sub-decl [segment] [&variant] "MoveFile" (&arg-list [&arg [&string] "origPath"] [&arg [&string] "newPath"]) #f] [&interface-sub-decl [segment] [&string] "GetFile" (&arg-list [&arg [&string] "inPath"]) #f] [&interface-sub-decl [segment] [&double] "getDecimal" (&arg-list [&arg [&double] "inNum"]) #f] [&interface-sub-decl [segment] [&string] "fileIntoMemory" (&arg-list [&arg [&string] "tPath"]) #f] [&interface-sub-decl [segment] [&string] "safeRight" (&arg-list [&arg [&string] "inSt"] [&arg [&long] "numChr"]) #f] [&interface-sub-decl [segment] [&string] "safeLeft" (&arg-list [&arg [&string] "inSt"] [&arg [&long] "numChr"]) #f] [&interface-sub-decl [segment] [&boolean] "MyIsNumeric" (&arg-list [&arg [&string] "Expression"]) #f] [&interface-sub-decl [segment] [&boolean] "isKeyDown" (&arg-list [&arg [&long] "KeyCode"]) #f] [&interface-sub-decl [segment] [&string] "toJSONString" (&arg-list [&arg [&string] "inSt"]) #f] [&interface-sub-decl [segment] [&string] "makeHTMLCodes" (&arg-list [&arg (&byval) [&string] "ST"]) #f] [&interface-sub-decl [segment] [&long] "ceiling" (&arg-list [&arg [&double] "Number"]) #f] [&interface-sub-decl [segment] [&void] "MakeTopMost" (&arg-list [&arg [&long] "Hwnd"]) #f] [&interface-sub-decl [segment] [&boolean] "GCD_Of" (&arg-list [&arg (&byval) [&double] "First_Int"] [&arg (&byval) [&double] "Second_Int"] [&arg [&long] "Numerator"] [&arg [&long] "Denominator"]) #f] [&interface-sub-decl [segment] [&string] "Filerize" (&arg-list [&arg [&string] "inSt"]) #f] [&interface-sub-decl [segment] [&string] "secsToTime3" (&arg-list [&arg [&double] "inSecs"]) #f] [&interface-sub-decl [segment] [&string] "secsToTime2" (&arg-list [&arg [&double] "inSecs"]) #f] [&interface-sub-decl [segment] [&string] "secsToTime" (&arg-list [&arg [&double] "inSecs"]) #f] [&interface-sub-decl [segment] [&variant] "addToLog" (&arg-list [&arg-paramarray "entries" [&string]]) #f] [&interface-sub-decl [segment] [&string] "myDir" (&arg-list [&arg (&optional) [&string] "Pathname"] [&arg (&optional) [&type "VbFileAttribute"] "Attributes" [&id "vbNormal"]]) #f] [&interface-sub-decl [segment] [&boolean] "setComboBoxToTextItem" (&arg-list [&arg [&type-dot [&id "VB"] [&id "ComboBox"]] "checkComboBox"] [&arg [&string] "matchString"]) #f] [&interface-sub-decl [segment] [&boolean] "separateURL" (&arg-list [&arg [&string] "inURL"] [&arg [&string] "Host"] [&arg [&string] "path"] [&arg (&optional) [&long] "port"] [&arg (&optional) [&string] "UserN"] [&arg (&optional) [&string] "PassW"] [&arg (&optional) [&string] "protocol"]) #f] [&interface-sub-decl [segment] [&boolean] "isInArray" (&arg-list [&arg [&variant] "checkFor"] [&arg [&array [&variant] -1] "checkIn"]) #f] [&interface-sub-decl [segment] [&boolean] "isIn" (&arg-list [&arg [&variant] "checkFor"] [&arg-paramarray "checkIn"]) #f] [&interface-sub-decl [segment] [&double] "Min" (&arg-list [&arg [&double] "n1"] [&arg [&double] "n2"]) #f] [&interface-sub-decl [segment] [&double] "Max" (&arg-list [&arg [&double] "n1"] [&arg [&double] "n2"]) #f] [&interface-sub-decl [segment] [&string] "fixZeros" (&arg-list [&arg [&string] "inSt"]) #f] [&interface-sub-decl [segment] [&string] "Unescape" (&arg-list [&arg (&byval) [&string] "inSt"]) #f] [&interface-sub-decl [segment] [&string] "Escape" (&arg-list [&arg [&string] "inTxt"]) #f] [&interface-sub-decl [segment] [&string] "myTrim" (&arg-list [&arg [&string] "inSt"] [&arg (&optional) [&string] "trimChar"]) #f] [&interface-sub-decl [segment] [&long] "makeVBColor" (&arg-list [&arg [&string] "inHex"]) #f] [&interface-sub-decl [segment] [&variant] "Swap" (&arg-list [&arg [&double] "in1"] [&arg [&double] "in2"]) #f] [&interface-sub-decl [segment] [&type "typGenSizeInfo"] "getSizeOfFolder" (&arg-list [&arg [&string] "pth"]) #f] [&interface-sub-decl [segment] [&string] "getFolderNameFromPath" (&arg-list [&arg [&string] "inPth"]) #f] [&interface-sub-decl [segment] [&string] "getFileNameNoExten" (&arg-list [&arg [&string] "inName"]) #f] [&interface-sub-decl [segment] [&string] "getFileNameFromPath" (&arg-list [&arg [&string] "inPth"]) #f] [&interface-sub-decl [segment] [&string] "getFileExten" (&arg-list [&arg [&string] "inName"]) #f] [&interface-sub-decl [segment] [&long] "SHFileOperation" (&arg-list [&arg [&type "SHFILEOPSTRUCT"] "lpFileOp"]) #f] [&vb-interface-prop (>>all) [segment] "debug_noLog" [&boolean]] [&interface-sub-decl [segment] [&long] "MakeSureDirectoryPathExists" (&arg-list [&arg (&byval) [&string] "DirPath"]) #f] [&interface-sub-decl [segment] [&integer] "GetKeyState" (&arg-list [&arg (&byval) [&long] "nVirtKey"]) #f] [&interface-sub-decl [segment] [&long] "SetMenuDefaultItem" (&arg-list [&arg (&byval) [&long] "hMenu"] [&arg (&byval) [&long] "uItem"] [&arg (&byval) [&long] "fByPos"]) #f] [&interface-sub-decl [segment] [&long] "GetSubMenu" (&arg-list [&arg (&byval) [&long] "hMenu"] [&arg (&byval) [&long] "nPos"]) #f] [&interface-sub-decl [segment] [&long] "GetMenu" (&arg-list [&arg (&byval) [&long] "Hwnd"]) #f] [&interface-sub-decl [segment] [&void] "Sleep" (&arg-list [&arg (&byval) [&long] "dwMilliseconds"]) #f]]] [list* "SVGtoGCODE.Polygons" [segment [&interface-sub-decl [segment] [&variant] "addFillPolies" (&arg-list [&arg [&array [&type "POINTAPI"]] "polyFills"] [&arg [&long] "polyID"]) #f] [&interface-sub-decl [segment] [&variant] "flipPolyStartEnd" (&arg-list [&arg [&long] "polyID"]) #f] [&interface-sub-decl [segment] [&variant] "calcPolyCenter" (&arg-list [&arg [&long] "polyID"] [&arg [&double] "X"] [&arg [&double] "Y"]) #f] [&interface-sub-decl [segment] [&variant] "removeDupes" (&arg-list [&arg [&array [&type "pointD"]] "pointList"]) #f] [&interface-sub-decl [segment] [&type "pointD"] "newPoint" (&arg-list [&arg [&double] "X"] [&arg [&double] "Y"]) #f] [&interface-sub-decl [segment] [&double] "pointDistance" (&arg-list [&arg [&type "pointD"] "a"] [&arg [&type "pointD"] "B"]) #f] [&interface-sub-decl [segment] [&type "pointD"] "lineIntersectLine" (&arg-list [&arg [&type "pointD"] "a"] [&arg [&type "pointD"] "B"] [&arg [&type "pointD"] "e"] [&arg [&type "pointD"] "f"] [&arg (&optional) [&boolean] "as_seg" #t]) #f] [&interface-sub-decl [segment] [&array [&type "pointD"]] "lineIntersectPoly" (&arg-list [&arg [&type "pointD"] "a"] [&arg [&type "pointD"] "B"] [&arg [&long] "polyID"]) #f] [&interface-sub-decl [segment] [&long] "Polygon" (&arg-list [&arg (&byval) [&long] "hDC"] [&arg [&type "POINTAPI"] "lpPoint"] [&arg (&byval) [&long] "nCount"]) #f]]] [list* "SVGtoGCODE.SVGParse" [segment [&interface-sub-decl [segment] [&variant] "MoveLayerToEnd" (&arg-list [&arg [&string] "LayerID"]) #f] [&interface-sub-decl [segment] [&variant] "exportGCODE" (&arg-list [&arg [&string] "outFile"] [&arg [&double] "feedRate"] [&arg [&boolean] "PlungeZ"] [&arg [&boolean] "PPIMode"] [&arg [&long] "PPIVal"] [&arg [&boolean] "LoopMode"] [&arg [&long] "Loops"] [&arg [&double] "RaiseDist"]) #f] [&interface-sub-decl [segment] [&void] "SwapLine" (&arg-list [&arg [&type "typLine"] "A"] [&arg [&type "typLine"] "b"]) #f] [&interface-sub-decl [segment] [&variant] "optimizePolys" (&arg-list) #f] [&interface-sub-decl [segment] [&variant] "mergeConnectedLines" (&arg-list) #f] [&interface-sub-decl [segment] [&variant] "sortByLayers" (&arg-list) #f] [&interface-sub-decl [segment] [&variant] "orderArray" (&arg-list [&arg [&array [&type "pointD"]] "inRes"] [&arg [&boolean] "Ascending"]) #f] [&interface-sub-decl [segment] [&array [&type "pointD"]] "lineThroughPolygon" (&arg-list [&arg [&long] "polyID"] [&arg [&type "pointD"] "startPoint"] [&arg [&type "pointD"] "endPoint"]) #f] [&interface-sub-decl [segment] [&void] "rasterLinePoly" (&arg-list [&arg [&long] "lineID"] [&arg [&double] "yStep"] [&arg [&string] "currentLayer"]) #f] [&interface-sub-decl [segment] [&void] "rasterDocument" (&arg-list [&arg [&double] "yStep"] [&arg [&string] "currentLayer"]) #f] [&interface-sub-decl [segment] [&boolean] "pointIsInPolyWithContain" (&arg-list [&arg [&long] "polyID"] [&arg [&double] "x"] [&arg [&double] "y"]) #f] [&interface-sub-decl [segment] [&double] "getPolyArea" (&arg-list [&arg [&long] "polyID"]) #f] [&interface-sub-decl [segment] [&boolean] "canPolyFitInside" (&arg-list [&arg [&long] "smallPoly"] [&arg [&long] "bigPoly"]) #f] [&interface-sub-decl [segment] [&variant] "getExtents" (&arg-list [&arg [&double] "maxX"] [&arg [&double] "maxY"] [&arg (&optional) [&double] "minX"] [&arg (&optional) [&double] "minY"]) #f] [&interface-sub-decl [segment] [&variant] "getPolyBounds" (&arg-list [&arg [&long] "polyID"] [&arg [&double] "minX"] [&arg [&double] "minY"] [&arg [&double] "maxX"] [&arg [&double] "maxY"]) #f] [&interface-sub-decl [segment] [&boolean] "pointIsInPoly" (&arg-list [&arg [&long] "polyID"] [&arg [&double] "x"] [&arg [&double] "y"]) #f] [&interface-sub-decl [segment] [&string] "getAttr" (&arg-list [&arg [&type-dot [&id "CHILKATXMLLib"] [&id "ChilkatXml"]] "attr"] [&arg [&string] "attrName"] [&arg (&optional) [&string] "DefaultValue"]) #f] [&interface-sub-decl [segment] [&boolean] "isNumChar" (&arg-list [&arg [&string] "char"]) #f] [&interface-sub-decl [segment] [&string] "extractToken" (&arg-list [&arg [&string] "inPath"] [&arg [&long] "pos"]) #f] [&interface-sub-decl [segment] [&variant] "skipWhiteSpace" (&arg-list [&arg [&string] "inPath"] [&arg [&long] "pos"]) #f] [&interface-sub-decl [segment] [&variant] "addPoint" (&arg-list [&arg [&double] "x"] [&arg [&double] "y"] [&arg (&optional) [&boolean] "noCutLineSegment"]) #f] [&interface-sub-decl [segment] [&variant] "finishLine" (&arg-list) #f] [&interface-sub-decl [segment] [&variant] "newLine" (&arg-list [&arg (&optional) [&string] "theLayer"]) #f] [&interface-sub-decl [segment] [&double] "angleFromPoint" (&arg-list [&arg [&type "pointD"] "pCenter"] [&arg [&type "pointD"] "pPoint"]) #f] [&interface-sub-decl [segment] [&double] "angleFromVect" (&arg-list [&arg [&double] "vTop"] [&arg [&double] "vBot"] [&arg [&double] "diffX"] [&arg [&double] "diffY"]) #f] [&interface-sub-decl [segment] [&double] "Deg2Rad" (&arg-list [&arg [&double] "inDeg"]) #f] [&interface-sub-decl [segment] [&double] "Rad2Deg" (&arg-list [&arg [&double] "inRad"]) #f] [&interface-sub-decl [segment] [&type "pointD"] "rotatePoint" (&arg-list [&arg [&type "pointD"] "inPoint"] [&arg [&double] "Theta"] [&arg [&type "pointD"] "centerPoint"]) #f] [&interface-sub-decl [segment] [&variant] "parseArcSegment" (&arg-list [&arg [&double] "RX"] [&arg [&double] "RY"] [&arg [&double] "rotAng"] [&arg [&type "pointD"] "P1"] [&arg [&type "pointD"] "P2"] [&arg [&boolean] "largeArcFlag"] [&arg [&boolean] "sweepFlag"]) #f] [&interface-sub-decl [segment] [&type "pointD"] "reflectAbout" (&arg-list [&arg [&type "pointD"] "ptReflect"] [&arg [&type "pointD"] "ptOrigin"]) #f] [&interface-sub-decl [segment] [&double] "getPinSeg" (&arg-list [&arg [&type "pointD"] "pStart"] [&arg [&type "pointD"] "pEnd"]) #f] [&interface-sub-decl [segment] [&variant] "parsePath" (&arg-list [&arg [&string] "inPath"] [&arg [&string] "currentLayer"]) #f] [&interface-sub-decl [segment] [&variant] "parsePolyLine" (&arg-list [&arg [&string] "inLine"]) #f] [&interface-sub-decl [segment] [&variant] "multiplyLineByMatrix" (&arg-list [&arg [&long] "polyID"] [&arg [&double] "A"] [&arg [&double] "b"] [&arg [&double] "c"] [&arg [&double] "D"] [&arg [&double] "e"] [&arg [&double] "f"]) #f] [&interface-sub-decl [segment] [&variant] "transformLine" (&arg-list [&arg [&long] "lineID"] [&arg [&string] "transformText"]) #f] [&interface-sub-decl [segment] [&variant] "parseEllipse" (&arg-list [&arg [&double] "cX"] [&arg [&double] "cY"] [&arg [&double] "RadiX"] [&arg [&double] "RadiY"]) #f] [&interface-sub-decl [segment] [&variant] "parseCircle" (&arg-list [&arg [&double] "cX"] [&arg [&double] "cY"] [&arg [&double] "Radi"]) #f] [&interface-sub-decl [segment] [&variant] "parseSVGKids" (&arg-list [&arg [&type "ChilkatXml"] "inEle"] [&arg (&optional) [&string] "currentLayer"]) #f] [&interface-sub-decl [segment] [&variant] "parseSVG" (&arg-list [&arg [&string] "inFile"]) #f] [&vb-interface-prop (>>all) [segment] "CurrentFile" [&string]] [&vb-interface-prop (>>all) [segment] "LastExportPath" [&string]] [&vb-interface-prop (>>all) [segment] "EXPORT_EXTENTS_Y" [&double]] [&vb-interface-prop (>>all) [segment] "EXPORT_EXTENTS_X" [&double]] [&vb-interface-prop (>>all) [segment] "GLOBAL_DPI" [&double]] [&vb-interface-prop (>>all) [segment] "currentLine" [&long]]]] [list* "SVGtoGCODE.Bezier" [segment [&interface-sub-decl [segment] [&void] "AddQuadBezier" (&arg-list [&arg [&double] "dt"] [&arg [&type "pointD"] "pt0"] [&arg [&type "pointD"] "pt1"] [&arg [&type "pointD"] "pt2"]) #f] [&interface-sub-decl [segment] [&void] "AddBezier" (&arg-list [&arg [&double] "dt"] [&arg [&type "pointD"] "pt0"] [&arg [&type "pointD"] "pt1"] [&arg [&type "pointD"] "pt2"] [&arg [&type "pointD"] "pt3"]) #f] [&interface-sub-decl [segment] [&void] "DrawBezier" (&arg-list [&arg [&type-dot [&id "VB"] [&id "PictureBox"]] "gr"] [&arg [&double] "dt"] [&arg [&type "pointD"] "pt0"] [&arg [&type "pointD"] "pt1"] [&arg [&type "pointD"] "pt2"] [&arg [&type "pointD"] "pt3"]) #f]]] [list* "SVGtoGCODE.frmInterface" [segment [&interface-sub-decl [segment] [&variant] "duplicateShapes" (&arg-list [&arg [&long] "endAt"] [&arg [&double] "Xadd"] [&arg [&double] "Yadd"]) #f] [&interface-sub-decl [segment] [&variant] "goTile" (&arg-list [&arg [&long] "nRows"] [&arg [&long] "nCols"] [&arg [&double] "wOff"] [&arg [&double] "hOff"] [&arg [&double] "rowDiff"] [&arg [&double] "colDiff"]) #f] [&interface-sub-decl [segment] [&variant] "doPagesOld" (&arg-list) #f] [&interface-sub-decl [segment] [&variant] "doPages" (&arg-list) #f] [&interface-sub-decl [segment] [&variant] "drawPuzzleEdge" (&arg-list [&arg [&long] "pShape"] [&arg [&boolean] "isHoriz"] [&arg [&boolean] "flipYes"] [&arg [&double] "sX"] [&arg [&double] "sY"] [&arg [&double] "pW"] [&arg [&double] "pH"]) #f] [&interface-sub-decl [segment] [&void] "doPuzzle" (&arg-list) #f] [&interface-sub-decl [segment] [&void] "cmdFill" (&arg-list) #f] [&interface-sub-decl [segment] [&variant] "zoomToFit" (&arg-list) #f] [&interface-sub-decl [segment] [&variant] "cmdScale" (&arg-list) #f] [&interface-sub-decl [segment] [&double] "rulerToMeasure" (&arg-list [&arg [&long] "inPx"] [&arg [&boolean] "isX"]) #f] [&interface-sub-decl [segment] [&long] "measureToRuler" (&arg-list [&arg [&double] "inMeas"] [&arg [&boolean] "isX"]) #f] [&interface-sub-decl [segment] [&string] "addEnters" (&arg-list [&arg [&string] "inSt"]) #f] [&interface-sub-decl [segment] [&void] "updateRulers" (&arg-list) #f] [&interface-sub-decl [segment] [&variant] "updateList" (&arg-list) #f] [&interface-sub-decl [segment] [&variant] "fillAll" (&arg-list [&arg [&long] "containerID"] [&arg [&boolean] "fillWith"]) #f] [&interface-sub-decl [segment] [&long] "getListLine" (&arg-list) #f] [&vb-interface-prop (>>all) [segment] "panY" [&double]] [&vb-interface-prop (>>all) [segment] "panX" [&double]] [&vb-interface-prop (>>all) [segment] "Zoom" [&double]] [&vb-interface-prop (>>all) [segment] "picRulers" [&type "@ControlArray" [&type-dot [&id "VB"] [&id "PictureBox"]]]] [&vb-interface-prop (>>all) [segment] "vbalImageList1" [&type-dot [&id "vbalIml6"] [&id "vbalImageList"]]] [&vb-interface-prop (>>all) [segment] "TB1" [&type-dot [&id "vbalTBar6"] [&id "cToolbar"]]] [&vb-interface-prop (>>all) [segment] "cReBar1" [&type-dot [&id "vbalTBar6"] [&id "cReBar"]]] [&vb-interface-prop (>>all) [segment] "Picture1" [&type-dot [&id "VB"] [&id "PictureBox"]]] [&vb-interface-prop (>>all) [segment] "List1" [&type-dot [&id "~virtual"] [&id "@ListBox1"]]] [&vb-interface-prop (>>all) [segment] "COMDLG" [&type-dot [&id "MSComDlg"] [&id "CommonDialog"]]] [&vb-interface-prop (>>all) [segment] "_picRulers_0" [&type-dot [&id "VB"] [&id "PictureBox"]]] [&vb-interface-prop (>>all) [segment] "_picRulers_1" [&type-dot [&id "VB"] [&id "PictureBox"]]] [&vb-interface-prop (>>all) [segment] "Picture2" [&type-dot [&id "VB"] [&id "PictureBox"]]]]]]